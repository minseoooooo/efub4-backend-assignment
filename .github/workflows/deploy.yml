name: CI/CD with Docker # 원하는 이름

on:
  push:
    branches: [ "main" ] 



jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: make application.yml
        run: |
          mkdir ./community/src/main/resources 
          cd ./community/src/main/resources 
          touch ./application.yml 
          echo "${{ secrets.APPLICATION }}" > ./application.yml

      - name: Build with Gradle
        run: |
          cd ./community
          chmod +x ./gradlew
          ./gradlew build -x test

      # 위에까지가 빌드
      # 여기서부턴 도커 허브에 올리는거




      # ID PW 이용해서 Docker hub에 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 후 푸시
      - name: Docker build & push
        uses: docker/build-push-action@v2
        with:
          context: ./community
          file: ./community/Dockerfile
          platforms: linux/arm64/v8
          push: true
          tags: ${{ secrets.DOCKER_REPO }}:latest

      # EC2에서 받아와서 실행하는 명령을 EC2에 전달
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}:latest
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_REPO }}:latest
            sudo docker image prune -f
